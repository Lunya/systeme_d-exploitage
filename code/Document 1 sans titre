Action I.2
Analyse

executable->ReadAt (&(machine->mainMemory[noffH.code.virtualAddr]),
			      noffH.code.size, noffH.code.inFileAddr);


executable->ReadAt (&
			      (machine->mainMemory
			       [noffH.initData.virtualAddr]),
			      noffH.initData.size, noffH.initData.inFileAddr);
      }

machine : Objet de type Machine [ La machine ]
	mainMemory : 	chaine de caractères. [ Mémoire physique pour stocker les programmes 				utilisateurs, le code et les données pendant l'exécution]
noffH : Objet de type NoffHeader [Nachos Object Code Format, des structures de données composé de 3 		segments : code, initData, uninitData]
	code : objet de type Segment [Composé de : adresse virtuelle, adresse du segment et la taille]
	initData : objet de type Segment [Composé de : adresse virtuelle, adresse du segment et la taille]
